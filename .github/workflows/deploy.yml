name: Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering from GitHub Actions tab
  workflow_dispatch:
    inputs:
      cache_level:
        description: 'Cache level'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - npm
          - full

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Full git history for better cache busting
          fetch-depth: 0
      
      # Add timestamp to force cache invalidation
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          # Only use cache if specifically requested
          cache: ${{ github.event.inputs.cache_level == 'npm' || github.event.inputs.cache_level == 'full' && 'npm' || 'none' }}
          
      - name: Install dependencies
        run: |
          echo "Installing with CLEAN dependencies (no cache)"
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          npm install
          
      - name: Clean build directory
        run: |
          rm -rf build
          echo "Build directory cleaned"
          
      - name: Add cache busting timestamp to index.html
        run: |
          # Add timestamp to force browser cache refresh
          sed -i "s/<meta name=\"build-timestamp\" content=\".*\">/<meta name=\"build-timestamp\" content=\"${{ steps.timestamp.outputs.timestamp }}\">/g" public/index.html
          echo "Added cache busting timestamp: ${{ steps.timestamp.outputs.timestamp }}"
      
      - name: Build
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: https://registry.reviz.dev/api
          REACT_APP_REAL_API_URL: https://registry.reviz.dev
          REACT_APP_ENV: production
          REACT_APP_USE_MOCK_DATA: false
          GENERATE_SOURCEMAP: false
          # Add build timestamp to force new build
          REACT_APP_BUILD_TIME: ${{ steps.timestamp.outputs.timestamp }}
          
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod --force'
          # Ensure unique deployment each time
          alias-domains: |
            nna-registry-service-frontend-${{ github.run_id }}.vercel.app
            nna-registry-service-frontend.vercel.app